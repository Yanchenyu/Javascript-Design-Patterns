/**
 * @description 外观模式
 * @author yancy
 */

// 简单的说，就是将一些复杂的操作统一封装起来，对于调用者来说，只需要调用一个方法，来实现一系列的操作

/**
 * 优点：
 *  轻量级，减少系统相互依赖。
    提高灵活性。
    提高了安全性。

    缺点：
    不符合开闭原则，如果要改东西很麻烦，继承重写都不合适。

 */

// 比如经常处理浏览器事件
let myEvent = {
    // ...
    stop: e => {
        e.stopPropagation();    // 阻止事件冒泡和捕获
        e.preventDefault();     // 阻止默认事件发生
    }
};
